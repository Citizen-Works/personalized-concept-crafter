
import React, { useState } from 'react';
import { useParams, Link, useNavigate } from 'react-router-dom';
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Textarea } from "@/components/ui/textarea";
import { ArrowLeft, Edit, Plus, Trash } from 'lucide-react';
import { useIdeas } from '@/hooks/useIdeas';
import { useDrafts } from '@/hooks/useDrafts';
import { toast } from 'sonner';

const IdeaDetailPage = () => {
  const { id } = useParams<{ id: string }>();
  const navigate = useNavigate();
  const [feedback, setFeedback] = useState('');
  const { getIdea, updateIdea, deleteIdea } = useIdeas();
  const { createDraft } = useDrafts();
  const { data: idea, isLoading, isError } = getIdea(id || '');
  
  const handleFeedbackSave = async () => {
    if (!idea) return;
    
    try {
      await updateIdea({
        id: idea.id,
        notes: feedback
      });
      toast.success('Feedback saved successfully');
    } catch (error) {
      console.error('Error saving feedback:', error);
      toast.error('Failed to save feedback');
    }
  };

  const handleDeleteIdea = async () => {
    if (!idea) return;
    
    if (window.confirm('Are you sure you want to delete this idea?')) {
      try {
        await deleteIdea(idea.id);
        navigate('/ideas');
      } catch (error) {
        console.error('Error deleting idea:', error);
      }
    }
  };

  const handleGenerateDraft = async (contentType: string) => {
    if (!idea) return;
    
    try {
      // You would likely call an AI service here to generate content
      // For now, we'll create a placeholder draft
      const placeholderContent = `This is a placeholder draft for the "${idea.title}" idea. 
      
In a real implementation, this would be generated by an AI service based on the idea details.

Idea description: ${idea.description || '(No description provided)'}

Idea notes: ${idea.notes || '(No notes provided)'}`;
      
      await createDraft({
        contentIdeaId: idea.id,
        content: placeholderContent,
        version: 1,
        feedback: '',
        contentType: idea.contentType
      });
      
      // Update the idea status to 'drafted'
      await updateIdea({
        id: idea.id,
        status: 'drafted'
      });
      
      toast.success('Draft generated successfully');
    } catch (error) {
      console.error('Error generating draft:', error);
      toast.error('Failed to generate draft');
    }
  };
  
  if (isLoading) {
    return (
      <div className="space-y-8">
        <div className="flex items-center justify-center h-64">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary"></div>
        </div>
      </div>
    );
  }

  if (isError || !idea) {
    return (
      <div className="space-y-8">
        <div className="flex items-center gap-4">
          <Button variant="ghost" size="sm" asChild className="gap-1">
            <Link to="/ideas">
              <ArrowLeft className="h-4 w-4" />
              <span>Back to Ideas</span>
            </Link>
          </Button>
        </div>
        <p className="text-muted-foreground">
          There was an error loading this idea. It may have been deleted or you may not have permission to view it.
        </p>
      </div>
    );
  }
  
  return (
    <div className="space-y-8">
      <div className="flex items-center gap-4">
        <Button variant="ghost" size="sm" asChild className="gap-1">
          <Link to="/ideas">
            <ArrowLeft className="h-4 w-4" />
            <span>Back to Ideas</span>
          </Link>
        </Button>
      </div>
      
      <div className="flex flex-col gap-2">
        <div className="flex flex-wrap items-center gap-2">
          <h1 className="text-3xl font-bold tracking-tight">{idea.title}</h1>
          <Badge 
            className={
              idea.status === 'approved' 
                ? 'bg-green-50 text-green-700 border-green-200' 
                : idea.status === 'drafted' 
                ? 'bg-blue-50 text-blue-700 border-blue-200'
                : idea.status === 'ready'
                ? 'bg-purple-50 text-purple-700 border-purple-200'
                : idea.status === 'published'
                ? 'bg-amber-50 text-amber-700 border-amber-200'
                : 'bg-gray-50 text-gray-700 border-gray-200'
            }
          >
            {idea.status.charAt(0).toUpperCase() + idea.status.slice(1)}
          </Badge>
          <Badge 
            className={
              idea.contentType === 'linkedin'
                ? 'bg-sky-50 text-sky-700 border-sky-200'
                : idea.contentType === 'newsletter'
                ? 'bg-emerald-50 text-emerald-700 border-emerald-200'
                : 'bg-rose-50 text-rose-700 border-rose-200'
            }
          >
            {idea.contentType.charAt(0).toUpperCase() + idea.contentType.slice(1)}
          </Badge>
        </div>
        <p className="text-muted-foreground">
          Created {new Date(idea.createdAt).toLocaleDateString()}
        </p>
      </div>
      
      <div className="grid gap-6 md:grid-cols-3">
        <div className="md:col-span-2 space-y-6">
          <Card>
            <CardHeader className="pb-3">
              <div className="flex items-center justify-between">
                <CardTitle>Description</CardTitle>
                <Button variant="ghost" size="sm" className="gap-1" asChild>
                  <Link to={`/ideas/${idea.id}/edit`}>
                    <Edit className="h-4 w-4" />
                    Edit
                  </Link>
                </Button>
              </div>
            </CardHeader>
            <CardContent>
              <p>{idea.description || '(No description provided)'}</p>
            </CardContent>
          </Card>
          
          <Card>
            <CardHeader className="pb-3">
              <div className="flex items-center justify-between">
                <CardTitle>Notes</CardTitle>
                <Button variant="ghost" size="sm" className="gap-1" asChild>
                  <Link to={`/ideas/${idea.id}/edit`}>
                    <Edit className="h-4 w-4" />
                    Edit
                  </Link>
                </Button>
              </div>
            </CardHeader>
            <CardContent>
              <p>{idea.notes || '(No notes provided)'}</p>
            </CardContent>
          </Card>
          
          <Card>
            <CardHeader className="pb-3">
              <div className="flex items-center justify-between">
                <CardTitle>Drafts</CardTitle>
                <Button 
                  className="gap-1" 
                  disabled={idea.status !== 'approved'}
                  onClick={() => handleGenerateDraft(idea.contentType)}
                >
                  <Plus className="h-4 w-4" />
                  Generate Draft
                </Button>
              </div>
              <CardDescription>
                Drafts generated from this content idea
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="p-8 text-center border rounded-lg bg-muted/10">
                <p className="text-sm text-muted-foreground">
                  No drafts have been generated for this idea yet
                </p>
                <Button 
                  className="mt-4 gap-1" 
                  disabled={idea.status !== 'approved'}
                  onClick={() => handleGenerateDraft(idea.contentType)}
                >
                  <Plus className="h-4 w-4" />
                  Generate Draft
                </Button>
              </div>
            </CardContent>
          </Card>
        </div>
        
        <div className="space-y-6">
          <Card>
            <CardHeader className="pb-3">
              <CardTitle>Generate Content</CardTitle>
              <CardDescription>
                Create content based on this idea
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <Button 
                className="w-full gap-1" 
                disabled={idea.status !== 'approved'} 
                onClick={() => handleGenerateDraft('linkedin')}
              >
                <Plus className="h-4 w-4" />
                Generate LinkedIn Post
              </Button>
              <Button 
                className="w-full gap-1" 
                disabled={idea.status !== 'approved'}
                onClick={() => handleGenerateDraft('newsletter')}
              >
                <Plus className="h-4 w-4" />
                Generate Newsletter
              </Button>
              <Button 
                className="w-full gap-1" 
                disabled={idea.status !== 'approved'}
                onClick={() => handleGenerateDraft('marketing')}
              >
                <Plus className="h-4 w-4" />
                Generate Marketing Copy
              </Button>
            </CardContent>
          </Card>
          
          <Card>
            <CardHeader className="pb-3">
              <CardTitle>Feedback</CardTitle>
              <CardDescription>
                Add notes or feedback about this idea
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <Textarea 
                placeholder="Add your feedback or notes here..."
                className="min-h-24 resize-none"
                value={feedback || idea.notes || ''}
                onChange={(e) => setFeedback(e.target.value)}
              />
              <Button 
                className="w-full"
                onClick={handleFeedbackSave}
              >
                Save Feedback
              </Button>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="pb-3">
              <CardTitle>Actions</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <Button 
                variant="outline" 
                className="w-full gap-1" 
                asChild
              >
                <Link to={`/ideas/${idea.id}/edit`}>
                  <Edit className="h-4 w-4" />
                  Edit Idea
                </Link>
              </Button>
              <Button 
                variant="destructive" 
                className="w-full gap-1"
                onClick={handleDeleteIdea}
              >
                <Trash className="h-4 w-4" />
                Delete Idea
              </Button>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
};

export default IdeaDetailPage;
